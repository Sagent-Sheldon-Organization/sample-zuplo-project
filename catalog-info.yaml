apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: adrian-api
  annotations:
    github.com/project-slug: AdrianMachado/adrian-api
spec:
  type: openapi
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    openapi: 3.1.0
    info:
      description: This is a sample server for Sagent. For this sample, you can use the
        api key `special-key` to test the authorization filters.
      version: 1.0.0
      title: Sagent APIs
      termsOfService: http://swagger.io/terms/
      contact:
        email: apiteam@swagger.io
      license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
    servers:
    - url: https://sagentzuplo-master-c7d0297.d2.zuplo.dev
    externalDocs:
      description: Find out more about Swagger
      url: http://swagger.io
    tags:
    - name: entities
      description: Everything about your entities
      externalDocs:
        description: Find out more
        url: http://swagger.io
    paths:
      "/openapi":
        get:
          summary: OpenAPI Spec
          description: Lorem ipsum dolor sit amet, **consectetur adipiscing** elit, sed
            do `eiusmod tempor` incididunt ut labore et dolore magna aliqua.
          operationId: f8d5c981-b173-4d3d-8a74-ce1f3f1ea2a3
      "/ap1/v1/entity/findByStatus":
        get:
          tags:
          - entities
          summary: Find all entities by status
          description: Multiple status values can be provided with comma separated strings
          operationId: findPetsByStatus
          parameters:
          - name: status
            in: query
            description: Status values that need to be considered for filter
            required: true
            explode: true
            schema:
              type: array
              items:
                type: string
                enum:
                - available
                - pending
                - sold
                default: available
          responses:
            '200':
              description: successful operation
              content:
                application/xml:
                  schema:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Entity"
                application/json:
                  schema:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Entity"
            '400':
              description: Invalid status value
          security:
          - petstore_auth:
            - write:entities
            - read:entities
      "/ap1/v1/entity/update":
        put:
          tags:
          - entities
          summary: Update an existing entity
          description: ''
          operationId: updatePet
          parameters: []
          responses:
            '400':
              description: Invalid ID supplied
            '404':
              description: Entity not found
            '405':
              description: Validation exception
          security:
          - petstore_auth:
            - write:entities
            - read:entities
          requestBody:
            "$ref": "#/components/requestBodies/Entity"
      "/ap1/v1/entity/delete/{entityId}":
        delete:
          tags:
          - entities
          summary: Deletes an Entity
          description: ''
          operationId: deletePet
          parameters:
          - name: api_key
            in: header
            required: false
            schema:
              type: string
          - name: petId
            in: path
            description: Entity id to delete
            required: true
            schema:
              type: integer
              format: int64
          responses:
            '400':
              description: Invalid ID supplied
            '404':
              description: Entity not found
          security:
          - petstore_auth:
            - write:entities
            - read:entities
      "/api/v1/entity/create":
        post:
          tags:
          - entities
          summary: Create a new Entity
          description: ''
          operationId: addPet
          parameters: []
          responses:
            '405':
              description: Invalid input
          security:
          - petstore_auth:
            - write:entities
            - read:entities
          requestBody:
            "$ref": "#/components/requestBodies/Entity"
          x-internal: false
    components:
      schemas:
        Order:
          type: object
          properties:
            id:
              type: integer
              format: int64
            petId:
              type: integer
              format: int64
            quantity:
              type: integer
              format: int32
            shipDate:
              type: string
              format: date-time
            status:
              type: string
              description: Order Status
              enum:
              - placed
              - approved
              - delivered
            complete:
              type: boolean
              default: false
          xml:
            name: Order
        Category:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
          xml:
            name: Category
        User:
          type: object
          properties:
            id:
              type: integer
              format: int64
            username:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            password:
              type: string
            phone:
              type: string
            userStatus:
              type: integer
              format: int32
              description: User Status
          xml:
            name: User
        Tag:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
          xml:
            name: Tag
        Entity:
          type: object
          required:
          - name
          - photoUrls
          properties:
            id:
              type: integer
              format: int64
              readOnly: true
            category:
              "$ref": "#/components/schemas/Category"
            name:
              type: string
              example: doggie
            photoUrls:
              type: array
              xml:
                name: photoUrl
                wrapped: true
              items:
                type: string
            tags:
              type: array
              xml:
                name: tag
                wrapped: true
              items:
                "$ref": "#/components/schemas/Tag"
            status:
              type: string
              description: entities status in the store
              enum:
              - available
              - pending
              - sold
          xml:
            name: Entity
        ApiResponse:
          type: object
          properties:
            code:
              type: integer
              format: int32
            type:
              type: string
            message:
              type: string
      requestBodies:
        Entity:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Entity"
            application/xml:
              schema:
                "$ref": "#/components/schemas/Entity"
          description: Entity object that needs to be added to the store
          required: true
        UserArray:
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
          description: List of user object
          required: true
      securitySchemes:
        petstore_auth:
          type: oauth2
          flows:
            implicit:
              authorizationUrl: http://petstore.swagger.io/oauth/dialog
              scopes:
                write:entities: modify pets in your account
                read:entities: read your pets
        api_key:
          type: apiKey
          name: api_key
          in: header

